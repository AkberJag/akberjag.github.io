import{_ as i,c as a,a1 as e,o as t}from"./chunks/framework.BAjNsQ49.js";const c=JSON.parse('{"title":"🛠️ Setting Up Python Environment","description":"","frontmatter":{},"headers":[],"relativePath":"python/basics/before_we_begin.md","filePath":"python/basics/before_we_begin.md","lastUpdated":1741491859000}'),n={name:"python/basics/before_we_begin.md"};function l(h,s,o,p,r,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="🛠️-setting-up-python-environment" tabindex="-1">🛠️ Setting Up Python Environment <a class="header-anchor" href="#🛠️-setting-up-python-environment" aria-label="Permalink to &quot;🛠️ Setting Up Python Environment&quot;">​</a></h1><p>Hey there! Before we dive into Python, let&#39;s set up a proper development environment. We&#39;re going to do this the right way from the start!</p><h2 id="🤔-why-uv" tabindex="-1">🤔 Why UV? <a class="header-anchor" href="#🤔-why-uv" aria-label="Permalink to &quot;🤔 Why UV?&quot;">​</a></h2><p>Instead of installing Python globally on the system (which can get messy), we&#39;ll use <code>uv</code> - a blazingly fast Python package installer and resolver written in Rust. Here&#39;s why:</p><ul><li><strong>Version Freedom</strong>: Easily switch between Python versions for different projects<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install specific Python version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.12</span></span></code></pre></div></li><li><strong>Lightning Fast</strong>: Way faster than pip for installing packages</li><li><strong>Better Dependency Management</strong>: Smart resolution of package dependencies</li><li><strong>Project Isolation</strong>: Creates clean, separate environments for each project</li></ul><blockquote><p>📚 For more detailed information about UV, check out the <a href="https://docs.astral.sh/uv/" target="_blank" rel="noreferrer">official UV documentation</a>.</p></blockquote><h2 id="🚀-installing-uv" tabindex="-1">🚀 Installing uv <a class="header-anchor" href="#🚀-installing-uv" aria-label="Permalink to &quot;🚀 Installing uv&quot;">​</a></h2><h3 id="on-macos-linux" tabindex="-1">On macOS/Linux: <a class="header-anchor" href="#on-macos-linux" aria-label="Permalink to &quot;On macOS/Linux:&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -LsSf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://astral.sh/uv/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span></span></code></pre></div><h3 id="on-windows" tabindex="-1">On Windows: <a class="header-anchor" href="#on-windows" aria-label="Permalink to &quot;On Windows:&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">powershell </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;irm https://astral.sh/uv/install.ps1 | iex&quot;</span></span></code></pre></div><h2 id="🌟-creating-a-new-project" tabindex="-1">🌟 Creating a New Project <a class="header-anchor" href="#🌟-creating-a-new-project" aria-label="Permalink to &quot;🌟 Creating a New Project&quot;">​</a></h2><p>Let&#39;s create a new project using uv:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create a new project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create a virtual environment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span></span></code></pre></div><h2 id="🤔-why-virtual-environments" tabindex="-1">🤔 Why Virtual Environments? <a class="header-anchor" href="#🤔-why-virtual-environments" aria-label="Permalink to &quot;🤔 Why Virtual Environments?&quot;">​</a></h2><p>Virtual environments (venv) are like isolated containers for your Python projects. Here&#39;s why they&#39;re awesome:</p><ul><li><strong>Dependency Isolation</strong>: Each project can have its own dependencies without conflicts</li><li><strong>Clean Development</strong>: No global package pollution</li><li><strong>Easy Replication</strong>: Others can easily recreate your exact environment</li><li><strong>Version Control</strong>: Different projects can use different Python versions</li></ul><h2 id="📦-managing-dependencies-with-uv" tabindex="-1">📦 Managing Dependencies with UV <a class="header-anchor" href="#📦-managing-dependencies-with-uv" aria-label="Permalink to &quot;📦 Managing Dependencies with UV&quot;">​</a></h2><p>UV makes package management super simple:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add a project dependency</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fastapi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add a development dependency (like testing tools)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install all dependencies from requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><h2 id="🧹-installing-ruff" tabindex="-1">🧹 Installing Ruff <a class="header-anchor" href="#🧹-installing-ruff" aria-label="Permalink to &quot;🧹 Installing Ruff&quot;">​</a></h2><p>Ruff is a blazingly fast Python linter and formatter written in Rust. Let&#39;s install it:</p><h3 id="on-macos-linux-1" tabindex="-1">On macOS/Linux: <a class="header-anchor" href="#on-macos-linux-1" aria-label="Permalink to &quot;On macOS/Linux:&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -LsSf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://astral.sh/ruff/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span></span></code></pre></div><h3 id="on-windows-1" tabindex="-1">On Windows: <a class="header-anchor" href="#on-windows-1" aria-label="Permalink to &quot;On Windows:&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">powershell </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;irm https://astral.sh/ruff/install.ps1 | iex&quot;</span></span></code></pre></div><blockquote><p>📚 For more information about Ruff&#39;s features and configuration options, visit the <a href="https://docs.astral.sh/ruff/" target="_blank" rel="noreferrer">official Ruff documentation</a>.</p></blockquote><h2 id="🎨-code-style-and-pep-8" tabindex="-1">🎨 Code Style and PEP 8 <a class="header-anchor" href="#🎨-code-style-and-pep-8" aria-label="Permalink to &quot;🎨 Code Style and PEP 8&quot;">​</a></h2><p>Python has a style guide called <a href="https://peps.python.org/pep-0008/" target="_blank" rel="noreferrer">PEP 8</a> that helps us write clean, readable code. Some key points:</p><ul><li>Use 4 spaces for indentation</li><li>Use snake_case for function and variable names</li><li>Use CamelCase for class names</li><li>Keep lines under 79 characters (though many modern teams use 88 or 100)</li></ul><p>We&#39;ll use <code>ruff</code> to help us follow these guidelines automatically!</p><h2 id="⚙️-vs-code-setup" tabindex="-1">⚙️ VS Code Setup <a class="header-anchor" href="#⚙️-vs-code-setup" aria-label="Permalink to &quot;⚙️ VS Code Setup&quot;">​</a></h2><p>This is a one-time setup to configure VS Code for optimal Python development:</p><ol><li>Press <code>Cmd+Shift+P</code> (Mac) or <code>Ctrl+Shift+P</code> (Windows/Linux) on VSCode</li><li>Type &quot;Open User Settings (JSON)&quot;</li><li>Paste the settings below:</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;python.defaultInterpreterPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${workspaceFolder}/.venv/bin/python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;editor.formatOnSave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;[python]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;editor.defaultFormatter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;charliermarsh.ruff&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;editor.formatOnSave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;editor.rulers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">88</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;editor.tabSize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="🐍-the-python-philosophy" tabindex="-1">🐍 The Python Philosophy <a class="header-anchor" href="#🐍-the-python-philosophy" aria-label="Permalink to &quot;🐍 The Python Philosophy&quot;">​</a></h2><p>Before you start coding, here&#39;s a fun Easter egg! Run this in your Python interpreter:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> this</span></span></code></pre></div><p>This will show you &quot;The Zen of Python&quot; - a collection of guiding principles for writing Python code. Don&#39;t worry if some points seem mysterious now - they&#39;ll make more sense as you learn. Here are a few key ones:</p><ul><li>Beautiful is better than ugly</li><li>Explicit is better than implicit</li><li>Simple is better than complex</li><li>Readability counts</li></ul><hr><p>Now that we&#39;ve got our environment set up the right way, we&#39;re ready to start our Python journey! Remember, these tools and guidelines are here to help us write better code - they&#39;re not meant to be obstacles. As you progress, you&#39;ll appreciate having started with good practices from the beginning. 🚀</p><p>Next up: Python Basics! Let&#39;s dive in! 🐍</p>`,43)]))}const u=i(n,[["render",l]]);export{c as __pageData,u as default};
